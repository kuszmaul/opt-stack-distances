Consider trace d c b d b d c a b b c d

initially (top of stack is to the left)
            L={}         M={}         B={}
access d
            L={d}           M={1}        B={0}
access c
            L={c, d}        M={2, 1}       B={0, 0}
access b
            L={b, c, d}     M={3, 2, 1}    B={0, 0, 0}
access d                                          Delta=3, Z=2, DeltaOpt=2 (D and Z and DeltaOpt in program one less than Delta and Z)
            L={d, b, c}     M={3, 1, 2}    B={0, 0, 0}
access b                                          Delta=2, Z=1, DeltaOpt=2
            L={b, d, c}     M={3, 1, 2}    B={0, 0, 0}
access d                                          Delta=2, Z=1, DeltaOpt=2
            L={d, b, c}     M={3, 1, 2}    B={0, 0, 0}
access c                                          Delta=3, Z=2, DeltaOpt=3
            L={c, d, b}     M={3, 2, 1}    B={0, 0, 0}
access a
            L={a, c, d, b}  M={4, 3, 2, 1} B={0, 0, 0, 0}
access b                                          Delta=4, Z=3, DeltaOpt=2
            L={b, a, c, d}  M={4, 1, 3, 2} B={0, 0, 0, 0}
access b no change             
access c                                          Delta=3, Z=2, DeltaOpt==3
            L={c, b, a, d}  M={4, 2, 1, 3}                                  whoops the code is producing M={4, 2, 1, 2}
 
 d



My CMA implementation is doing this
M={3, 1, 2}  // This is  where it went wrong.  Should be {3, 1, 2}
             // if I compare one smaller I get increment: {3, 2, 2}, then set elt 1 to {3, 1, 2}
